#!/bin/bash

# ‚ö° –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –¥–µ–ø–ª–æ–π
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ª–∞–µ—Ç –∫–æ–º–º–∏—Ç —Å —Ñ–∏–∫—Å–æ–º –∏ –¥–µ–ø–ª–æ–∏—Ç
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick-fix.sh "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∫—Å–∞"

set -e

FIX_MESSAGE="$1"

if [ -z "$FIX_MESSAGE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∫—Å–∞"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick-fix.sh \"–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∫—Å–∞\""
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./quick-fix.sh \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ 401\""
    echo "  ./quick-fix.sh \"–§–∏–∫—Å undefined –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö\""
    echo "  ./quick-fix.sh \"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ credentials: include\""
    exit 1
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏—é –¥–ª—è —Ñ–∏–∫—Å–∞
VERSION="v$(date +%Y.%m.%d-%H%M)-fix"
echo "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: $FIX_MESSAGE"
echo "üè∑Ô∏è  –í–µ—Ä—Å–∏—è: $VERSION"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
if git diff-index --quiet HEAD --; then
    echo "‚ùå –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    exit 1
fi

echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
git status --short
echo ""

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
git add .

# –ö–æ–º–º–∏—Ç–∏–º —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "fix:"
git commit -m "fix: $FIX_MESSAGE"

# –ü—É—à–∏–º
git push origin main

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
git tag "$VERSION"
git push origin "$VERSION"

echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, —Ç–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω"
echo ""

# –ñ–¥–µ–º —Å–±–æ—Ä–∫–∏ (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è)
echo "‚è≥ –ñ–¥–µ–º —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤..."
TIMEOUT=300  # 5 –º–∏–Ω—É—Ç
ELAPSED=0
INTERVAL=20

while [ $ELAPSED -lt $TIMEOUT ]; do
    LATEST_RUN=$(curl -s "https://api.github.com/repos/drobotenko-netizen/piligrim/actions/runs?per_page=1" | jq -r '.workflow_runs[0]')
    STATUS=$(echo "$LATEST_RUN" | jq -r '.status')
    CONCLUSION=$(echo "$LATEST_RUN" | jq -r '.conclusion // "null"')
    BRANCH=$(echo "$LATEST_RUN" | jq -r '.head_branch')
    
    if [ "$BRANCH" = "$VERSION" ] && [ "$STATUS" = "completed" ]; then
        if [ "$CONCLUSION" = "success" ]; then
            echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
            break
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: $CONCLUSION"
            exit 1
        fi
    fi
    
    echo "‚è≥ –°–±–æ—Ä–∫–∞... ($ELAPSED/$TIMEOUT —Å–µ–∫)"
    sleep $INTERVAL
    ELAPSED=$((ELAPSED + INTERVAL))
done

if [ $ELAPSED -ge $TIMEOUT ]; then
    echo "‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: https://github.com/drobotenko-netizen/piligrim/actions"
    exit 1
fi

# –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π
echo "üöÄ –î–µ–ø–ª–æ–∏–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."

ssh yc-vm << EOF
set -e

echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑—ã..."
docker pull ghcr.io/drobotenko-netizen/piligrim/piligrim-web:$VERSION
docker pull ghcr.io/drobotenko-netizen/piligrim/piligrim-api:$VERSION

echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker stop api web && docker rm api web

docker run -d --name api --network infra_default --restart unless-stopped \\
  -e PORT=4000 -e NODE_ENV=production -e DATABASE_URL=file:/data/dev.db \\
  -v piligrim_api_data:/data ghcr.io/drobotenko-netizen/piligrim/piligrim-api:$VERSION

docker run -d --name web --network infra_default --restart unless-stopped \\
  -e NODE_ENV=production -e PORT=3000 -e NEXT_PUBLIC_API_BASE=https://piligrim.5-star-roi.ru \\
  ghcr.io/drobotenko-netizen/piligrim/piligrim-web:$VERSION

docker network connect proxy api && docker network connect proxy web
EOF

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
sleep 3
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://piligrim.5-star-roi.ru/api/health)

if [ "$API_STATUS" = "200" ]; then
    echo "‚úÖ –§–∏–∫—Å $VERSION —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω!"
    echo "üåê https://piligrim.5-star-roi.ru/"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è (HTTP $API_STATUS)"
fi
