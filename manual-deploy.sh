#!/bin/bash

# üöÄ –†—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π Piligrim –±–µ–∑ GitHub Actions
# –°–æ–±–∏—Ä–∞–µ—Ç –∏ –¥–µ–ø–ª–æ–∏—Ç –∫–æ–¥ –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä

set -e

COMMIT_MESSAGE="$1"

if [ -z "$COMMIT_MESSAGE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manual-deploy.sh \"–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π\""
    exit 1
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
VERSION="v$(date +%Y.%m.%d-%H%M)"
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π –≤–µ—Ä—Å–∏–∏ $VERSION"
echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ: $COMMIT_MESSAGE"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
if ! git diff-index --quiet HEAD --; then
    echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    echo "üìä –°—Ç–∞—Ç—É—Å git:"
    git status --short
    
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –∫–æ–º–º–∏—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π? (Y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Nn]$ ]]; then
        echo "‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 1
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    echo "üì¶ –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add .
    
    # –ö–æ–º–º–∏—Ç–∏–º
    echo "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç..."
    git commit -m "$COMMIT_MESSAGE"
    
    echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
else
    echo "‚úÖ –ù–µ—Ç –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
fi

# –ü—É—à–∏–º –≤ main
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
git push origin main

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
echo "üè∑Ô∏è  –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ $VERSION..."
git tag "$VERSION"
git push origin "$VERSION"

echo "‚úÖ –¢–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
echo ""

# –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."

ssh yc-vm << EOF
set -e

echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
cd /tmp
rm -rf piligrim-deploy
git clone https://github.com/drobotenko-netizen/piligrim.git piligrim-deploy
cd piligrim-deploy
git checkout $VERSION

echo "üê≥ –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –°–æ–±–∏—Ä–∞–µ–º API –æ–±—Ä–∞–∑
echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º API –æ–±—Ä–∞–∑..."
cd server
docker build -t piligrim-api:$VERSION .
cd ..

# –°–æ–±–∏—Ä–∞–µ–º WEB –æ–±—Ä–∞–∑
echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º WEB –æ–±—Ä–∞–∑..."
cd client
docker build -t piligrim-web:$VERSION .
cd ..

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker stop api web 2>/dev/null || true
docker rm api web 2>/dev/null || true

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker run -d --name api --network infra_default --restart unless-stopped \\
  -e PORT=4000 -e NODE_ENV=production -e DATABASE_URL=file:/data/dev.db \\
  -e FRONTEND_BASE_URL=https://piligrim.5-star-roi.ru \\
  -e SERVER_PUBLIC_URL=https://piligrim.5-star-roi.ru \\
  -e TELEGRAM_BOT_TOKEN=8466721340:AAGaA3Y1nozm5YLTP_F2ChpyCQdDktyF6_0 \\
  -e TELEGRAM_POLLING=1 \\
  -v piligrim_api_data:/data piligrim-api:$VERSION

docker run -d --name web --network infra_default --restart unless-stopped \\
  -e NODE_ENV=production -e PORT=3000 -e NEXT_PUBLIC_API_BASE=https://piligrim.5-star-roi.ru \\
  piligrim-web:$VERSION

echo "üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Å–µ—Ç–∏ proxy..."
docker network connect proxy api 2>/dev/null || true
docker network connect proxy web 2>/dev/null || true

echo "‚è±Ô∏è  –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5

echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\\t{{.Image}}\\t{{.Status}}"

echo "üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
cd /tmp
rm -rf piligrim-deploy

EOF

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://piligrim.5-star-roi.ru/api/health)
if [ "$API_STATUS" = "200" ]; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $API_STATUS)"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $API_STATUS)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Frontend
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://piligrim.5-star-roi.ru/)
if [[ "$FRONTEND_STATUS" =~ ^(200|307|302)$ ]]; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $FRONTEND_STATUS)"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $FRONTEND_STATUS)"
fi

echo ""
echo "üéâ –†—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π –≤–µ—Ä—Å–∏–∏ $VERSION –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ: $COMMIT_MESSAGE"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://piligrim.5-star-roi.ru/"
echo "üîß API: https://piligrim.5-star-roi.ru/api/health"
echo ""
echo "üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./check_server_version.sh"
