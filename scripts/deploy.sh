#!/usr/bin/env bash
set -euo pipefail

# ะฃะฟัะพัะตะฝะฝัะน ะดะตะฟะปะพะน - ัะพะปัะบะพ ะฟะตัะตะทะฐะฟััะบ ะบะพะฝัะตะนะฝะตัะพะฒ
echo "๐ ะัะพััะพะน ะดะตะฟะปะพะน Piligrim..."

ssh yc-vm << EOF
set -e

echo "๐ ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะบะพะฝัะตะนะฝะตัั..."
sudo docker stop api web 2>/dev/null || true
sudo docker rm api web 2>/dev/null || true

echo "๐ ะะฐะฟััะบะฐะตะผ ั ะฟัะฐะฒะธะปัะฝัะผะธ ะฝะฐัััะพะนะบะฐะผะธ..."

# API ั .env
sudo docker run -d --name api --network infra_default --restart unless-stopped \\
  -e PORT=4000 -e NODE_ENV=production -e DATABASE_URL=file:/data/dev.db \\
  -v infra_api_data:/data \\
  --env-file /srv/piligrim/app/server/.env \\
  piligrim-api:latest

# WEB
sudo docker run -d --name web --network infra_default --restart unless-stopped \\
  -e NODE_ENV=production -e PORT=3000 \\
  -e NEXT_PUBLIC_API_BASE=https://piligrim.5-star-roi.ru \\
  piligrim-web:latest

echo "๐ ะะพะดะบะปััะฐะตะผ ะบ proxy..."
sudo docker network connect proxy api 2>/dev/null || true
sudo docker network connect proxy web 2>/dev/null || true

echo "๐ ะะตัะตะทะฐะฟััะบะฐะตะผ Caddy..."
sudo docker restart caddy

echo "โณ ะะดะตะผ..."
sleep 15

echo "โ ะัะพะฒะตััะตะผ..."
curl -fsSL https://piligrim.5-star-roi.ru/api/health -o /dev/null && echo "โ API ัะฐะฑะพัะฐะตั" || echo "โ API ะฝะต ัะฐะฑะพัะฐะตั"

echo "๐ ะะพัะพะฒะพ!"

EOF

echo "๐ ะัะพััะพะน ะดะตะฟะปะพะน ะทะฐะฒะตััะตะฝ!"
