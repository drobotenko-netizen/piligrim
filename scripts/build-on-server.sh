#!/usr/bin/env bash
set -euo pipefail

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä—è–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo "üöÄ –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

ssh yc-vm << 'EOF'
set -e

cd /srv/piligrim/app

echo "üî® –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã —Å –Ω–∞—à–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏..."

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã —Å latest —Ç–µ–≥–æ–º
sudo docker compose -f docker-compose.prod.yml build --pull

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
sudo docker stop api web 2>/dev/null || true
sudo docker rm api web 2>/dev/null || true

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."

# –ó–∞–ø—É—Å–∫–∞–µ–º API —Å .env —Ñ–∞–π–ª–æ–º
sudo docker run -d --name api --network infra_default --restart unless-stopped \
  -e PORT=4000 -e NODE_ENV=production -e DATABASE_URL=file:/data/dev.db \
  -v infra_api_data:/data \
  --env-file /srv/piligrim/app/server/.env \
  piligrim-api:latest

# –ó–∞–ø—É—Å–∫–∞–µ–º WEB
sudo docker run -d --name web --network infra_default --restart unless-stopped \
  -e NODE_ENV=production -e PORT=3000 \
  -e NEXT_PUBLIC_API_BASE=https://piligrim.5-star-roi.ru \
  piligrim-web:latest

echo "üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ proxy..."
sudo docker network connect proxy api 2>/dev/null || true
sudo docker network connect proxy web 2>/dev/null || true

echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Caddy..."
sudo docker restart caddy

echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞..."
sleep 20

echo "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º..."
curl -fsSL https://piligrim.5-star-roi.ru/api/health -o /dev/null && echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
curl -fsSL https://piligrim.5-star-roi.ru -o /dev/null && echo "‚úÖ WEB —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå WEB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å —Ç–µ–≥–æ–º: $TAG"

EOF

echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
