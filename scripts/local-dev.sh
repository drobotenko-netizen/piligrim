#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
start_server() {
  echo "üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
  cd "$PROJECT_ROOT/server"
  npm run dev &
  SERVER_PID=$!
  echo "Server PID: $SERVER_PID"
  sleep 3
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
start_client() {
  echo "üåê –ó–∞–ø—É—Å–∫ Frontend..."
  cd "$PROJECT_ROOT/client"
  npm run dev &
  CLIENT_PID=$!
  echo "Client PID: $CLIENT_PID"
  sleep 3
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è dev —Ç–æ–∫–µ–Ω–∞
get_dev_token() {
  echo "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ dev —Ç–æ–∫–µ–Ω–∞..."
  sleep 2
  RESPONSE=$(curl -s -X POST http://localhost:4000/api/auth/dev-login \
    -H "Content-Type: application/json" \
    -d '{"phone": "+79999999999"}')
  
  TOKEN=$(echo $RESPONSE | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)
  
  if [ -n "$TOKEN" ]; then
    echo "‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
    echo "access_token=$TOKEN" > "$PROJECT_ROOT/dev_cookies.txt"
    echo ""
    echo "üìù –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ dev_cookies.txt"
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: --cookie \"\$(cat dev_cookies.txt)\""
  else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω"
    echo "–û—Ç–≤–µ—Ç: $RESPONSE"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
test_api() {
  echo ""
  echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
  echo ""
  
  echo "1. Health check:"
  curl -s http://localhost:4000/api/health | jq '.'
  echo ""
  
  echo "2. Last data date:"
  curl -s http://localhost:4000/api/iiko/last-data-date | jq '.'
  echo ""
  
  if [ -f "$PROJECT_ROOT/dev_cookies.txt" ]; then
    echo "3. Auth check (with token):"
    curl -s http://localhost:4000/api/auth/me \
      --cookie "$(cat $PROJECT_ROOT/dev_cookies.txt)" | jq '.'
    echo ""
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
  echo ""
  echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
  if [ -n "$SERVER_PID" ]; then
    kill $SERVER_PID 2>/dev/null || true
  fi
  if [ -n "$CLIENT_PID" ]; then
    kill $CLIENT_PID 2>/dev/null || true
  fi
  # –¢–∞–∫–∂–µ —É–±–∏–≤–∞–µ–º –ø–æ –ø–æ—Ä—Ç–∞–º
  lsof -ti:4000 | xargs kill -9 2>/dev/null || true
  lsof -ti:3000 | xargs kill -9 2>/dev/null || true
  echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup EXIT INT TERM

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-help}" in
  start)
    start_server
    start_client
    echo ""
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã:"
    echo "   API:      http://localhost:4000"
    echo "   Frontend: http://localhost:3000"
    echo ""
    echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    wait
    ;;
    
  api)
    start_server
    echo ""
    echo "‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:4000"
    echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    wait
    ;;
    
  client)
    start_client
    echo ""
    echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω: http://localhost:3000"
    echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    wait
    ;;
    
  token)
    get_dev_token
    ;;
    
  test)
    test_api
    ;;
    
  stop)
    cleanup
    ;;
    
  help|*)
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å API –∏ Frontend"
    echo "  api     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ API —Å–µ—Ä–≤–µ—Ä"
    echo "  client  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Frontend"
    echo "  token   - –ü–æ–ª—É—á–∏—Ç—å dev —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo "  test    - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API"
    echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
    echo "  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start          # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë"
    echo "  $0 api            # –¢–æ–ª—å–∫–æ API"
    echo "  $0 token          # –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω"
    echo "  $0 test           # –¢–µ—Å—Ç API"
    ;;
esac

