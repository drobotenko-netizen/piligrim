#!/bin/bash

# üöÄ –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Piligrim
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ª–∞–µ—Ç –∫–æ–º–º–∏—Ç, —Ç–µ–≥, —Å–±–æ—Ä–∫—É –∏ –¥–µ–ø–ª–æ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./full-deploy.sh "–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"

set -e

COMMIT_MESSAGE="$1"

if [ -z "$COMMIT_MESSAGE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./full-deploy.sh \"–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π\""
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./full-deploy.sh \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –æ—Ç—á–µ—Ç–∞—Ö\""
    echo "  ./full-deploy.sh \"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞\""
    echo "  ./full-deploy.sh \"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\""
    exit 1
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
VERSION="v$(date +%Y.%m.%d-%H%M)"
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤–µ—Ä—Å–∏–∏ $VERSION"
echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ: $COMMIT_MESSAGE"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
if ! git diff-index --quiet HEAD --; then
    echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    echo "üìä –°—Ç–∞—Ç—É—Å git:"
    git status --short
    
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –∫–æ–º–º–∏—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π? (Y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Nn]$ ]]; then
        echo "‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 1
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    echo "üì¶ –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add .
    
    # –ö–æ–º–º–∏—Ç–∏–º
    echo "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç..."
    git commit -m "$COMMIT_MESSAGE"
    
    echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
else
    echo "‚úÖ –ù–µ—Ç –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
fi

# –ü—É—à–∏–º –≤ main
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
git push origin main

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
echo "üè∑Ô∏è  –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ $VERSION..."
git tag "$VERSION"
git push origin "$VERSION"

echo "‚úÖ –¢–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
echo ""

# –ñ–¥–µ–º —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤
echo "‚è≥ –ñ–¥–µ–º —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤ –≤ GitHub Actions..."
echo "üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º: https://github.com/drobotenko-netizen/piligrim/actions"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏ (–º–∞–∫—Å–∏–º—É–º 10 –º–∏–Ω—É—Ç)
TIMEOUT=600
ELAPSED=0
INTERVAL=30

while [ $ELAPSED -lt $TIMEOUT ]; do
    echo "‚è±Ô∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏... ($ELAPSED/$TIMEOUT —Å–µ–∫)"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ workflow
    LATEST_RUN=$(curl -s "https://api.github.com/repos/drobotenko-netizen/piligrim/actions/runs?per_page=1" | jq -r '.workflow_runs[0]')
    STATUS=$(echo "$LATEST_RUN" | jq -r '.status')
    CONCLUSION=$(echo "$LATEST_RUN" | jq -r '.conclusion // "null"')
    BRANCH=$(echo "$LATEST_RUN" | jq -r '.head_branch')
    
    echo "üìä –°—Ç–∞—Ç—É—Å: $STATUS, –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: $CONCLUSION, –í–µ—Ç–∫–∞: $BRANCH"
    
    if [ "$BRANCH" = "$VERSION" ]; then
        if [ "$STATUS" = "completed" ]; then
            if [ "$CONCLUSION" = "success" ]; then
                echo "‚úÖ –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
                break
            else
                echo "‚ùå –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: $CONCLUSION"
                echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: https://github.com/drobotenko-netizen/piligrim/actions"
                exit 1
            fi
        elif [ "$STATUS" = "in_progress" ] || [ "$STATUS" = "queued" ]; then
            echo "‚è≥ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è..."
        else
            echo "‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $STATUS"
        fi
    else
        echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è —Ç–µ–≥–∞ $VERSION..."
    fi
    
    sleep $INTERVAL
    ELAPSED=$((ELAPSED + INTERVAL))
done

if [ $ELAPSED -ge $TIMEOUT ]; then
    echo "‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏ (10 –º–∏–Ω—É—Ç)"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é: https://github.com/drobotenko-netizen/piligrim/actions"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 1
    fi
fi

echo ""
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."

# –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
ssh yc-vm << EOF
set -e

echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã..."
docker pull ghcr.io/drobotenko-netizen/piligrim/piligrim-web:$VERSION
docker pull ghcr.io/drobotenko-netizen/piligrim/piligrim-api:$VERSION

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker stop api web 2>/dev/null || true
docker rm api web 2>/dev/null || true

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker run -d --name api --network infra_default --restart unless-stopped \\
  -e PORT=4000 -e NODE_ENV=production -e DATABASE_URL=file:/data/dev.db \\
  -v piligrim_api_data:/data ghcr.io/drobotenko-netizen/piligrim/piligrim-api:$VERSION

docker run -d --name web --network infra_default --restart unless-stopped \\
  -e NODE_ENV=production -e PORT=3000 -e NEXT_PUBLIC_API_BASE=https://piligrim.5-star-roi.ru \\
  ghcr.io/drobotenko-netizen/piligrim/piligrim-web:$VERSION

echo "üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Å–µ—Ç–∏ proxy..."
docker network connect proxy api 2>/dev/null || true
docker network connect proxy web 2>/dev/null || true

echo "‚è±Ô∏è  –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5

echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"
EOF

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://piligrim.5-star-roi.ru/api/health)
if [ "$API_STATUS" = "200" ]; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $API_STATUS)"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $API_STATUS)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Frontend
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://piligrim.5-star-roi.ru/)
if [[ "$FRONTEND_STATUS" =~ ^(200|307|302)$ ]]; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $FRONTEND_STATUS)"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $FRONTEND_STATUS)"
fi

echo ""
echo "üéâ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤–µ—Ä—Å–∏–∏ $VERSION –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ: $COMMIT_MESSAGE"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://piligrim.5-star-roi.ru/"
echo "üîß API: https://piligrim.5-star-roi.ru/api/health"
echo "üìä GitHub Actions: https://github.com/drobotenko-netizen/piligrim/actions"
echo ""
echo "üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./check_server_version.sh"
